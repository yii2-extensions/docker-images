on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'

  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'

concurrency:
  group: build-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: build

env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super Linter - Docker Focus
        uses: super-linter/super-linter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_DOCKERFILE: true
          VALIDATE_DOCKERFILE_HADOLINT: true
          VALIDATE_BASH: true
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_YAML: true
          VALIDATE_GITHUB_ACTIONS: true
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: false

  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        build_type: [dev, full, prod]

    steps:
    - name: Checkout.
      uses: actions/checkout@v5

    - name: Setup Docker Buildx.
      uses: docker/setup-buildx-action@v3

    - name: Prepare tags.
      id: tags
      run: |
        BASE_NAME="${{ env.REGISTRY }}/${{ github.repository_owner }}/apache"
        BUILD_TYPE="${{ matrix.build_type }}"
        PHP_VERSION="8.4"
        echo "BASE_NAME=${BASE_NAME}" >> "$GITHUB_OUTPUT"
        echo "PHP_VERSION=${PHP_VERSION}" >> "$GITHUB_OUTPUT"

        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          # For PRs: use PR number
          echo "TAG=${BASE_NAME}:${PHP_VERSION}-debian-${BUILD_TYPE}-pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # For main: stable tags + short SHA
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "TAG=${BASE_NAME}:${PHP_VERSION}-debian-${BUILD_TYPE},${BASE_NAME}:${PHP_VERSION}-debian-${BUILD_TYPE}-sha-${SHORT_SHA}" >> $GITHUB_OUTPUT
        else
          # Other branches: use branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "TAG=${BASE_NAME}:${PHP_VERSION}-debian-${BUILD_TYPE}-${BRANCH_NAME}" >> $GITHUB_OUTPUT
        fi

    - name: Build Only.
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./src/flavor/Dockerfile.apache
        push: false
        tags: ${{ steps.tags.outputs.TAG }}
        build-args: |
          BUILD_TYPE=${{ matrix.build_type }}
          PHP_VERSION=${{ steps.tags.outputs.PHP_VERSION }}
        cache-from: type=gha,scope=${{ github.head_ref || github.ref_name }}-${{ matrix.build_type }}
        provenance: false
        sbom: false

    - name: Show result.
      run: |
        echo "üéâ Build completed for ${{ matrix.build_type }}!"
        echo "Event: ${{ github.event_name }}"
        echo "Tags: ${{ steps.tags.outputs.TAG }}"
        if [[ "${{ github.event_name }}" == "push" ]]; then
          echo "‚úÖ Image pushed to registry"
        else
          echo "‚ÑπÔ∏è Image built but not pushed (PR mode)"
        fi

    - name: Clear old GitHub Actions caches.
      if: ${{ github.event_name == 'push' && matrix.build_type == 'full' }}
      uses: easimon/wipe-cache@main
