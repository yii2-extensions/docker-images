---
on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'

  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - '.gitattributes'

concurrency:
  group: build-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: build

env:
  REGISTRY: ghcr.io

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super Linter - Docker Focus
        uses: super-linter/super-linter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_CHECKOV: false
          VALIDATE_ENV: false
          VALIDATE_GIT_MERGE_CONFLICT_MARKERS: false
          VALIDATE_GITHUB_ACTIONS_ZIZMOR: false
          VALIDATE_JSCPD: false
          VALIDATE_TRIVY: false

  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        build_type: [dev, full, prod]

    steps:
      - name: Checkout.
        uses: actions/checkout@v5

      - name: Setup Docker Buildx.
        uses: docker/setup-buildx-action@v3

      - name: Prepare tags.
        id: tags
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          PHP_VERSION: "8.4"
        run: |
          BASE_NAME="${{ env.REGISTRY }}/${{ github.repository_owner }}/apache"
          echo "BASE_NAME=${BASE_NAME}" >> "$GITHUB_OUTPUT"
          echo "PHP_VERSION=${{ env.PHP_VERSION }}" >> "$GITHUB_OUTPUT"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For PRs: use PR number
            TAG="${BASE_NAME}:${{ env.PHP_VERSION }}-debian-${{ env.BUILD_TYPE }}-pr-${{ github.event.number }}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For main: stable tags + short SHA
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            TAG="${BASE_NAME}:${{ env.PHP_VERSION }}-debian-${{ env.BUILD_TYPE }}"
            TAG="${TAG},${BASE_NAME}:${{ env.PHP_VERSION }}-debian-${{ env.BUILD_TYPE }}-sha-${SHORT_SHA}"
          else
            # Other branches: use branch name
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            TAG="${BASE_NAME}:${{ env.PHP_VERSION }}-debian-${{ env.BUILD_TYPE }}-${BRANCH_NAME}"
          fi

          echo "TAG=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Build Only.
        uses: docker/build-push-action@v6
        env:
          CACHE_SCOPE: ${{ github.head_ref || github.ref_name }}-${{ matrix.build_type }}
        with:
          context: .
          file: ./src/flavor/Dockerfile.apache
          push: false
          tags: ${{ steps.tags.outputs.TAG }}
          build-args: |
            BUILD_TYPE=${{ matrix.build_type }}
            PHP_VERSION=${{ steps.tags.outputs.PHP_VERSION }}
          cache-from: >-
            type=gha,scope=${{ env.CACHE_SCOPE }}
          cache-to: >-
            type=gha,mode=max,scope=${{ env.CACHE_SCOPE }}
          provenance: false
          sbom: false

      - name: Show result.
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          EVENT_NAME: ${{ github.event_name }}
        run: |
          echo "🎉 Build completed for ${{ env.BUILD_TYPE }}!"
          echo "Event: ${{ env.EVENT_NAME }}"
          echo "Tags: ${{ steps.tags.outputs.TAG }}"
          if [[ "${{ env.EVENT_NAME }}" == "push" ]]; then
            echo "✅ Image pushed to registry"
          else
            echo "ℹ️ Image built but not pushed (PR mode)"
          fi

      - name: Clear old GitHub Actions caches.
        if: >-
          ${{ github.event_name == 'push' && matrix.build_type == 'full' }}
        uses: easimon/wipe-cache@main
